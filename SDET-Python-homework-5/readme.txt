bash: для запуска скрипта нужно сделать его исполняемым  chmod +x script 
python:удобно можно запустить скрипты через pycharm 
script1:
	bash: в данном скрипте используется утилита wc устанавливается по умолчанию практически во всех дистрибутивах GNU/Linux
	python: в цикле считаем количество строк и выводим в файл res1
script2:
	bash:с помощью утилиты awk выводим только методы,с помощью grep ищем get|post|put|head ,с помощью uniq -c считаем количество запросов
	python:в цикле открываю файл и ифами проверяю какой метод содержит строка и считаю количество таких строк и выводу в res2
script3:
	bash:с помощью утилиты awk выводим только url ,сортируем , с помощью uniq -c считаем количество одинаковых url,сортируем по количестку с помощью sort -n,с помощью tail выводим топ 10 самых частых запросов
	python:считываем файл в список,разделяем список на список с кортежами с помощью str.split() , в цикле по индексу находим url запроса и записываем в список, в цикле считаем количество одинаковых url,сортируем с помощью sorted(key=) и выводим в файл топ 10 самых частых запросов в res3
script4:
	bash:открываем файл,  с помощью awk выводим запросы с статускодом 4xx , сортируем по размеру запроса с помощью sort-n, с помощью awk print  выводим url,статускод,размер запроса,ip , с помощью tail -n 5 фильтруем самые большие запросы и записываем в res4
	python:считываем файл в список,разделяем список на список с кортежами с помощью str.split() ,в цикле отделяем запросы с 4хх ответом, в цикле по индексу находим url,статускод,размер запроса,ip и записываем в list , сортируем по размеру запроса с помощью list.sort(key=labmda x:x[i]) и выводим в файл res4
script5:
	bash:открываем файл,  с помощью awk выводим запросы с статускодом 5xx , выводим ip с помощью awp print $i, с помощью uniq -c и отфильтровываем повторяющиеся строки в отсортированном файле, с помощью tail -n 5 фильтруем самые большие запросы и записываем в res5
	python:считываем файл в список,разделяем список на список с кортежами с помощью str.split() ,в цикле отделяем запросы с 5хх ответом, в цикле по индексу находим ip и записываем в list , в цикле считаем количество дублей ip ,сортируем с помощью sorted(file,key=labmda x:x[i]) и выводим в файл res5